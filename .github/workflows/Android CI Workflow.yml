name: Android CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '21'

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
 

    - name: Manually Download Command Line Tools
      run: |
       rm -rf $ANDROID_HOME/cmdline-tools
       rm -rf $ANDROID_HOME/platform-tools

        mkdir -p $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        rm cmdline-tools.zip

    - name: Manually Download & Extract Platform Tools (ADB)
      run: |
        echo $ANDROID_HOME
        wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip -O platform-tools.zip
        unzip platform-tools.zip -d $ANDROID_HOME
        rm platform-tools.zip

    - name: Ensure ADB is Installed and Working
      run: |
        chmod +x $ANDROID_HOME/platform-tools/adb
        export PATH=$ANDROID_HOME/platform-tools:$PATH
        which adb || echo "ADB not found in PATH!"
        adb version || echo "ADB command still not found!"
        adb devices || echo "ADB command still not found!"
       

    - name: Install Emulator
      run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator"


    - name: Accept Licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install System Image
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-29;default;x86_64"


    - name: Verify Installed System Images
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list | grep "system-images"
   

    - name: Create AVD
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list device


        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-29;default;x86_64" -d pixel_3 --force
        echo "List of AVDs after creation:"
        $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd


    - name: Verify AVD
      run: |
          export ANDROID_AVD_HOME=$HOME/.config/.android/avd
          echo "AVD Home: $ANDROID_AVD_HOME"
          ls $ANDROID_AVD_HOME  # List the contents of the AVD directory
          $ANDROID_HOME/emulator/emulator -list-avds

    - name: Start Emulator
      run: |  
        export ANDROID_AVD_HOME=$HOME/.config/.android/avd
        $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &
        sleep 60


     
    - name: Ensure ADB running fine
      run: |
        chmod +x $ANDROID_HOME/platform-tools/adb
        export PATH=$ANDROID_HOME/platform-tools:$PATH
        adb devices || echo "ADB command still not found!"


    # - name: Clean Project
    #   run: ./gradlew clean

    # - name: Invalidate Gradle Cache
    #   run: ./gradlew --refresh-dependencies

    - name: Print Java Version
      run: java -version

    - name: Print Classpath
      run: echo $CLASSPATH
 

    - name: Run Tests
      run: ./gradlew connectedCheck --stacktrace 

    - name: Upload UI Test Report # Saves UI test reports for review
      uses: actions/upload-artifact@v4
      with:
       name: instrumentation-test-report
       path: app/build/reports/androidTests/connected/
        


    # - name: very
    #   run: |
    #      $ANDROID_HOME/emulator/emulator -list-avds
         

    # - name: Start Emulator
    #   run: |  
    #        export ANDROID_AVD_HOME=$HOME/.android/avd

    #        $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &
    #        nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot &
    #           sleep 60
         

    # - name: Set ANDROID_HOME and Update PATH
    #   run: |
        
    #     echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
    #     # echo "ANDROID_HOME=$HOME/.android/avd" >> $GITHUB_ENV
    #     echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$PATH" >> $GITHUB_ENV
    #     echo "export ANDROID_HOME=$HOME/Android/Sdk" >> ~/.bashrc
    #     echo "export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> ~/.bashrc
    #     source ~/.bashrc
      

    # - name: Wait for Emulator to Boot
    #   run: |
    #     $ANDROID_HOME/platform-tools/adb -e wait-for-device
    #     $ANDROID_HOME/platform-tools/adb devices

    # - name: Verify AVD
    #   run: |
    #     $ANDROID_HOME/emulator/emulator -list-avds
